/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 */

import org.opensearch.gradle.test.RestIntegTestTask

plugins {
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
    id "com.netflix.nebula.ospackage" version "11.5.0"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://aws.oss.sonatype.org/content/repositories/snapshots" }
}

apply plugin: 'opensearch.opensearchplugin'
apply plugin: 'opensearch.pluginzip'
apply plugin: 'opensearch.java'
apply plugin: 'opensearch.testclusters'
apply plugin: 'opensearch.java-rest-test'
apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'org.jetbrains.kotlin.plugin.allopen'

ext {
    projectSubstitutions = [:]
    licenseFile = rootProject.file('LICENSE')
    noticeFile = rootProject.file('NOTICE')
}

opensearchplugin {
    name 'opensearch-notifications-core'
    description 'OpenSearch Notifications Core Plugin'
    classname 'org.opensearch.notifications.core.NotificationCorePlugin'
}

publishing {
    publications {
        pluginZip(MavenPublication) { publication ->
            pom {
                name = "opensearch-notifications-core"
                description = "OpenSearch Notifications Core Plugin"
                groupId = "org.opensearch.plugin"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        name = "OpenSearch"
                        url = "https://github.com/opensearch-project/notifications"
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = "Snapshots"
            url = "https://aws.oss.sonatype.org/content/repositories/snapshots"
            credentials {
                username "$System.env.SONATYPE_USERNAME"
                password "$System.env.SONATYPE_PASSWORD"
            }
        }
    }
}

check.dependsOn jacocoTestReport

// turn off javadoc as it barfs on Kotlin code
javadoc.enabled = false
licenseHeaders.enabled = true
// no need to validate pom, as we do not upload to maven/sonatype
validateNebulaPom.enabled = false
dependencyLicenses.enabled = false
thirdPartyAudit.enabled = false
// Allow @Test to be used in test classes not inherited from LuceneTestCase.
forbiddenApis.ignoreFailures = true
// Allow test cases to be named Tests without having to be inherited from LuceneTestCase.
testingConventions.enabled = false
loggerUsageCheck.enabled = false

allOpen {
    annotation("org.opensearch.notifications.core.util.OpenForTesting")
}

test {
    useJUnitPlatform()
    // add "-Dtests.security.manager=false" to VM options if you want to run integ tests in IntelliJ
    systemProperty 'tests.security.manager', 'false'
}

// disable for core, we don't need to run test cluster
run {
    onlyIf { false }
}

//TODO: see if this can be only set at top level and apply to subprojects, or we remove from top project if possible
configurations.all {
    if (it.state != Configuration.State.UNRESOLVED) return
    resolutionStrategy {
        force "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
        force "org.jetbrains.kotlin:kotlin-stdlib-common:${kotlin_version}"
        force "commons-logging:commons-logging:${versions.commonslogging}" // resolve for amazonaws
        force "commons-codec:commons-codec:1.13" // resolve for amazonaws
        force "org.apache.httpcomponents.client5:httpclient5:${versions.httpclient5}" // resolve for amazonaws
        force "org.apache.httpcomponents.core5:httpcore5:${versions.httpcore5}" // resolve for amazonaws
        force "joda-time:joda-time:2.8.1" // Resolve for amazonaws
        force "com.fasterxml.jackson.core:jackson-core:${versions.jackson}" // resolve for amazonaws
        force "com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}" // resolve for amazonaws
        force "com.fasterxml.jackson.core:jackson-databind:${versions.jackson_databind}" // resolve for amazonaws
        force "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.11.4" // resolve for amazonaws
        force "com.fasterxml.jackson.dataformat:jackson-dataformat-smile:2.11.4" // resolve for amazonaws
        force "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.4" // resolve for amazonaws
        force "junit:junit:4.13.2" // resolve for amazonaws
    }
}

compileKotlin { kotlinOptions.freeCompilerArgs = ['-Xjsr305=strict'] }

dependencies {
    compileOnly "org.opensearch:opensearch:${opensearch_version}"
    implementation "commons-logging:commons-logging:${versions.commonslogging}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-common:${kotlin_version}"
    implementation "org.apache.httpcomponents.core5:httpcore5:${versions.httpcore5}"
    implementation "org.apache.httpcomponents.client5:httpclient5:${versions.httpclient5}"
    implementation "org.apache.httpcomponents.core5:httpcore5-h2:${versions.httpcore5}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${versions.jackson_databind}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}"
    implementation "com.amazonaws:aws-java-sdk-core:${aws_version}"
    implementation "com.amazonaws:aws-java-sdk-sns:${aws_version}"
    implementation "com.amazonaws:aws-java-sdk-sts:${aws_version}"
    implementation "com.amazonaws:aws-java-sdk-ses:${aws_version}"
    implementation "com.sun.mail:javax.mail:1.6.2"
    implementation "javax.activation:activation:1.1"
    implementation "org.slf4j:slf4j-api:${versions.slf4j}" //Needed for httpclient5
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:${versions.log4j}"
    testImplementation(
            'org.assertj:assertj-core:3.16.1',
            'org.junit.jupiter:junit-jupiter-api:5.6.2',
            "org.junit.jupiter:junit-jupiter-params:5.6.2",
            "org.easymock:easymock:5.4.0",
            "org.apache.logging.log4j:log4j-core:${versions.log4j}",
            'org.mockito:mockito-junit-jupiter:3.10.0',
            'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0',
            'io.mockk:mockk:1.11.0',
            'io.mockk:mockk-common:1.11.0',
            'io.mockk:mockk-dsl:1.11.0',
            'io.mockk:mockk-dsl-jvm:1.11.0',
            'io.mockk:mockk-agent-api:1.11.0',
            'io.mockk:mockk-agent-common:1.11.0',
            'io.mockk:mockk-agent-jvm:1.11.0'
    )
    testImplementation 'org.springframework.integration:spring-integration-mail:5.5.0'
    // https://mvnrepository.com/artifact/com.icegreen/greenmail
    testImplementation group: 'com.icegreen', name: 'greenmail', version: '1.6.14'
    testImplementation 'org.springframework.integration:spring-integration-test-support:5.5.0'
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.6.2')
    testImplementation "org.jetbrains.kotlin:kotlin-test:${kotlin_version}"
    testImplementation "net.bytebuddy:byte-buddy-agent:1.12.7"
    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    testImplementation "org.opensearch.test:framework:${opensearch_version}"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}" // required by mockk
    implementation project(path: ":${rootProject.name}-core-spi", configuration: 'shadow')
}

configurations {
    testImplementation {
        exclude group: 'org.elasticsearch', module: 'securemock' // resolve jarhell with mockito
    }
}

// This is afterEvaluate because the bundlePlugin ZIP task is updated afterEvaluate and changes the ZIP name to match the plugin name
afterEvaluate {
    ospackage {
        packageName = "${name}"
        release = isSnapshot ? "0.1" : '1'
        version = "${project.version}" - "-SNAPSHOT"

        into '/usr/share/opensearch/plugins'
        from(zipTree(bundlePlugin.archiveFile)) {
            into opensearchplugin.name
        }

        user 'root'
        permissionGroup 'root'
        fileMode 0644
        dirMode 0755

        requires('opensearch-oss', versions.opensearch, EQUAL)
        packager = 'Amazon'
        vendor = 'Amazon'
        os = 'LINUX'
        prefix '/usr'

        license 'ASL-2.0'
        maintainer 'OpenSearch Team <opensearch@amazon.com>'
        url 'https://opensearch.org/'
        summary '''
         OpenSearch Notifications Core.
         Reference documentation can be found at https://opendistro.github.io/for-elasticsearch-docs/. // TODO:MIGRATE
    '''.stripIndent().replace('\n', ' ').trim()
    }

    buildRpm {
        arch = 'NOARCH'
        dependsOn 'assemble'
        finalizedBy 'renameRpm'
        task renameRpm(type: Copy) {
            from("$buildDir/distributions")
            into("$buildDir/distributions")
            rename "$archiveFileName", "${packageName}-${version}.rpm"
            doLast { delete file("$buildDir/distributions/$archiveFileName") }
        }
    }

    buildDeb {
        arch = 'all'
        dependsOn 'assemble'
        finalizedBy 'renameDeb'
        task renameDeb(type: Copy) {
            from("$buildDir/distributions")
            into("$buildDir/distributions")
            rename "$archiveFileName", "${packageName}-${version}.deb"
            doLast { delete file("$buildDir/distributions/$archiveFileName") }
        }
    }
}
